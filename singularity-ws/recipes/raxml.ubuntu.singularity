#-------------------------------------------------------------------------------
#  \author Jan P Buchmann <jan.buchmann@sydney.edu.au>
#  \description Singularity recipe for ABACBS 2018 Docker Workshop
#-------------------------------------------------------------------------------

# Header: Mandatory
#   - Which OS to use as base efor the container
#   - Configuration of the base system
#   E.g. which Linux distribution, versions and wich packages are part of the
#        core install
BootStrap: docker                                      # Mandatory: Which base to use, e.g. docker, shub, ..
From: ubuntu:latest

# Sections : Optional
# defined by '%' and followed by its name. Use to control the build process and
# container setup

##  %help section
#    Add a message describing the container's usage or purpose
%help
This is a simple demonrations of deploying RAxML in a Singularity container.
Add usage later

##  %setup section
#    Commands executed on the host system after the installation of the base OS,
#    but before %post. Runs as root user.
#    If using Singularity < 2.3, this is the point to move files into the
#    container required by %post. For Singularity >= 2.3, use %files section to
#    copy files reuiqres by %post
%setup
  sed -i \
      -e 's%http://archive.ubuntu.com/ubuntu%mirror://mirrors.ubuntu.com/mirrors.txt%' \
      -e 's/^deb-src/#deb-src/' /etc/apt/sources.list
  #mkdir -p ${SINGULARITY_ROOTFS}/tmp/build/cont_build

##  %files: Files section
#    Copy files from host to container before post
#%files
  #/etc/apt/sources.list /etc/apt/sources.list
##  %labels section
#    Add Metadata to the container in the form of LABELNAME LABELVALUE
%labels
  Maintainer jpb
  Contact jan.buchmann@sydney.edu.au
  Version 0.1.0

##  %enviroment section
#     Enviroment variables are sourced during run time, not build time.
#     Use same conventions as in .bashrc, .profile, etc.
#     Set enviroment variabels required for build in %post, not here.
#     However, echo 'export MYVAR=iamthewalrus' >> $SINGULARITY_ENVIRONMENT will
#     export during %post.

## % post section
#   All commnads are run during build time in the containre after installing the
#   base OS. At this point, files cannot be copied from host to the container,
#   but using git, wget, curl, scp, etc. will work. Runs as toot user.
%post
  apt-get -q update
  apt-get -y install  \
    git \
    build-essential \
    mpi-default-dev \
    tree
  apt-get clean
  apt-get autoremove
  #rm -rf /var/lib/apt/lists/*
  #mkdir -p /tmp/cont_build
  #cd /tmp/cont_build
  #rm -rf /tmp/cont_build
  #if [ -d standard-RAxML ]; then
  #  cd standard-RAxML
  #  git pull
  #else
  #  git clone https://github.com/stamatak/standard-RAxML.git
  #  cd standard-RAxML
  #fi
  #make -f Makefile.SSE3.HYBRID.gcc
  #rm *.o
  #make -f Makefile.AVX.HYBRID.gcc
  #rm *.o

## %runscript section
#   %runscript is not executed during build,but called upon running the
#   singularity image, analogous to Docker's CMD or ENTRYPOINT.
#   Handle argumnet processing etc.
%runscript
  echo "Not much to do here, rather empty"

## %startscript section
#   Define what to do if started as an instance
#%startscript
